spring:
  application:
    name: eureka-server-clustered
  profiles: peer1
server:
  port: 8011
  host: localhost
eureka:
  instance:
    hostname: eureka-peer1
    preferIpAddress: true
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}        # 将Instance ID设置成IP:端口的形式
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${server.host}:8012/eureka/,http://${server.host}:8013/eureka/
---
spring:
  application:
    name: eureka-server-clustered
  profiles: peer2
server:
  port: 8012
  host: localhost
eureka:
  instance:
    hostname: eureka-peer2
    preferIpAddress: true
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}        # 将Instance ID设置成IP:端口的形式
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${server.host}:8013/eureka/,http://${server.host}:8011/eureka/
---
spring:
  application:
    name: eureka-server-clustered
  profiles: peer3
server:
  port: 8013
  host: localhost
eureka:
  instance:
    hostname: eureka-peer3
    preferIpAddress: true
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}        # 将Instance ID设置成IP:端口的形式
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${server.host}:8011/eureka/,http://${server.host}:8012/eureka/



#测试三个节点
#客户端注册服务中心1：
#          服务中心1，服务中心2可用，服务中心3不可用
#客户端注册服务中心2：
#          服务中心2，服务中心可用， 服务中心1不可用
#客户端注册服务中心3：
#          服务中心1，服务中心3可用，服务中心2不可用


#测试四个节点
#客户端注册服务中心1：
#          服务中心1，服务中心2可用，服务中心3不可用,服务中心4不可用
#客户端注册服务中心2：
#          服务中心2，服务中心3可用，服务中心1不可用,服务中心4不可用
#客户端注册服务中心3：
#          服务中心3，服务中心4可用，服务中心1不可用,服务中心2不可用
#客户端注册服务中心4：
#          服务中心4，服务中心1可用，服务中心2不可用,服务中心3不可用
#
#测试结果
#服务中心只能两两注册， 不具有传递性， 如，注册到服务中心1，只能同步到服务中心2 ，不能同步到，服务中心3、4的其他节点



